<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~     Copyright (C) 2023  Intergral GmbH
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU Affero General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     (at your option) any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU Affero General Public License for more details.
  ~
  ~     You should have received a copy of the GNU Affero General Public License
  ~     along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<!--suppress MavenModelInspection -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.intergral.deep</groupId>
    <artifactId>deep-java-client</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>agent</artifactId>

  <name>Agent</name>
  <description>This is the main output of the build, containing an all encompassing jar as a java
    agent.
  </description>

  <properties>
    <relocation.package>com.intergral.deep.relocated</relocation.package>
    <relocation.native.prefix>com_intergral_deep_relocated</relocation.native.prefix>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.intergral.deep</groupId>
      <artifactId>deep-proto</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.intergral.deep</groupId>
      <artifactId>agent-api</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.intergral.deep</groupId>
      <artifactId>reflect-api</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.intergral.deep</groupId>
      <artifactId>reflect-java-9</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>

    <!-- Plugins -->
    <dependency>
      <groupId>com.intergral.deep.plugins</groupId>
      <artifactId>java-plugin</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.intergral.deep.plugins</groupId>
      <artifactId>cf-plugin</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.intergral.deep.plugins</groupId>
      <artifactId>prometheus-metrics</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.intergral.deep.plugins</groupId>
      <artifactId>otel-plugin</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>


    <!-- we use slf4j api but JUL impl for logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
      <version>${tcnative.version}</version>
      <classifier>linux-x86_64</classifier>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
      <version>${tcnative.version}</version>
      <classifier>windows-x86_64</classifier>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
      <version>${tcnative.version}</version>
      <classifier>osx-x86_64</classifier>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-context</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- Test Dependencies-->
    <dependency>
      <groupId>com.intergral.deep.tests</groupId>
      <artifactId>test-utils</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <!-- We add this just so we can load the jsp classes, we don't care about updating this. -->
    <!-- If this is updated the jsp test files might need to be recompiled on the new version.   -->
    <!--suppress VulnerableLibrariesLocal -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jasper</artifactId>
      <version>9.0.6</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <!-- Unpack tcnative so we can relocate these -->
            <id>unpack-tcnative</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <!-- we need to shade the java code for netty, this then requires us to shade the native libs with the same prefix-->
                <artifactItem>
                  <groupId>io.netty</groupId>
                  <artifactId>netty-tcnative-boringssl-static</artifactId>
                  <version>${tcnative.version}</version>
                  <classifier>linux-x86_64</classifier>
                  <includes>META-INF/native/*tcnative*</includes>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/unpack/</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>io.netty</groupId>
                  <artifactId>netty-tcnative-boringssl-static</artifactId>
                  <version>${tcnative.version}</version>
                  <classifier>windows-x86_64</classifier>
                  <includes>META-INF/native/*tcnative*</includes>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/unpack/</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>io.netty</groupId>
                  <artifactId>netty-tcnative-boringssl-static</artifactId>
                  <version>${tcnative.version}</version>
                  <classifier>osx-x86_64</classifier>
                  <includes>META-INF/native/*tcnative*</includes>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/unpack/</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <!-- This execution creates a lite jar that contains the com.intergral dependencies, but not the relocated ones -->
          <execution>
            <id>lite-jar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <outputFile>target/${project.artifactId}-${project.version}-lite.jar</outputFile>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Premain-Class>com.intergral.deep.agent.Agent</Premain-Class>
                    <Agent-Class>com.intergral.deep.agent.Agent</Agent-Class>
                    <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                    <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>

                    <Can-Retransform-Classes>true</Can-Retransform-Classes>
                    <!-- Git specific -->
                    <Git-Branch>${git.branch}</Git-Branch>
                    <Git-Commit-Id>${git.commit.id}</Git-Commit-Id>
                    <Git-Commit-Time>${git.commit.time}</Git-Commit-Time>
                    <Git-Dirty>${git.dirty}</Git-Dirty>
                    <Git-Tags>${git.tags}</Git-Tags>
                    <Git-Remote-Origin-Url>${git.remote.origin.url}</Git-Remote-Origin-Url>
                    <!-- Add build time -->
                    <Build-Time>${maven.build.timestamp}</Build-Time>
                    <!-- Version components -->
                    <Version-Major>${parsedVersion.majorVersion}</Version-Major>
                    <Version-Minor>${parsedVersion.minorVersion}</Version-Minor>
                    <Version-Micro>${parsedVersion.incrementalVersion}</Version-Micro>
                    <Version>${project.version}</Version>
                    <!-- Add info -->
                    <Implementation-Build>${git.commit.id}</Implementation-Build>
                    <Implementation-Branch>${git.branch}</Implementation-Branch>
                    <!-- Add Build Info -->
                    <X-CI-Project-Name>${env.CI_PROJECT_NAME}</X-CI-Project-Name>
                    <X-CI-Pipeline-Id>${env.CI_PIPELINE_ID}</X-CI-Pipeline-Id>
                    <X-CI-Pipeline-Iid>${env.CI_PIPELINE_IID}</X-CI-Pipeline-Iid>
                    <X-CI-Pipeline-Source>${env.CI_PIPELINE_SOURCE}</X-CI-Pipeline-Source>
                    <X-CI-Pipeline-Url>${env.CI_PIPELINE_URL}</X-CI-Pipeline-Url>

                    <Specification-Title>${project.artifactId}</Specification-Title>
                    <Specification-Version>${project.version}</Specification-Version>
                    <Implementation-Title>${project.name}</Implementation-Title>
                    <Implementation-Version>${project.version}</Implementation-Version>
                    <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                  </manifestEntries>
                </transformer>
              </transformers>
              <artifactSet>
                <includes>
                  <include>com.intergral*:*</include>
                </includes>
              </artifactSet>
            </configuration>
          </execution>
          <!-- This execution creates an uber jar that contains the all dependencies -->
          <execution>
            <id>uber-jar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Premain-Class>com.intergral.deep.agent.Agent</Premain-Class>
                    <Agent-Class>com.intergral.deep.agent.Agent</Agent-Class>
                    <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                    <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>

                    <Can-Retransform-Classes>true</Can-Retransform-Classes>
                    <!-- Git specific -->
                    <Git-Branch>${git.branch}</Git-Branch>
                    <Git-Commit-Id>${git.commit.id}</Git-Commit-Id>
                    <Git-Commit-Time>${git.commit.time}</Git-Commit-Time>
                    <Git-Dirty>${git.dirty}</Git-Dirty>
                    <Git-Tags>${git.tags}</Git-Tags>
                    <Git-Remote-Origin-Url>${git.remote.origin.url}</Git-Remote-Origin-Url>
                    <!-- Add build time -->
                    <Build-Time>${maven.build.timestamp}</Build-Time>
                    <!-- Version components -->
                    <Version-Major>${parsedVersion.majorVersion}</Version-Major>
                    <Version-Minor>${parsedVersion.minorVersion}</Version-Minor>
                    <Version-Micro>${parsedVersion.incrementalVersion}</Version-Micro>
                    <Version>${project.version}</Version>
                    <!-- Add info -->
                    <Implementation-Build>${git.commit.id}</Implementation-Build>
                    <Implementation-Branch>${git.branch}</Implementation-Branch>
                    <!-- Add Build Info -->
                    <X-CI-Project-Name>${env.CI_PROJECT_NAME}</X-CI-Project-Name>
                    <X-CI-Pipeline-Id>${env.CI_PIPELINE_ID}</X-CI-Pipeline-Id>
                    <X-CI-Pipeline-Iid>${env.CI_PIPELINE_IID}</X-CI-Pipeline-Iid>
                    <X-CI-Pipeline-Source>${env.CI_PIPELINE_SOURCE}</X-CI-Pipeline-Source>
                    <X-CI-Pipeline-Url>${env.CI_PIPELINE_URL}</X-CI-Pipeline-Url>

                    <Specification-Title>${project.artifactId}</Specification-Title>
                    <Specification-Version>${project.version}</Specification-Version>
                    <Implementation-Title>${project.name}</Implementation-Title>
                    <Implementation-Version>${project.version}</Implementation-Version>
                    <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                  </manifestEntries>
                </transformer>
                <!--These shade the tcnative libs with the relocation.native.prefix-->
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                  <resource>
                    META-INF/native/lib${relocation.native.prefix}_netty_tcnative_linux_x86_64.so
                  </resource>
                  <file>
                    ${project.build.directory}/unpack/META-INF/native/libnetty_tcnative_linux_x86_64.so
                  </file>
                </transformer>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                  <resource>
                    META-INF/native/lib${relocation.native.prefix}_netty_tcnative_osx_x86_64.jnilib
                  </resource>
                  <file>
                    ${project.build.directory}/unpack/META-INF/native/libnetty_tcnative_osx_x86_64.jnilib
                  </file>
                </transformer>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                  <resource>
                    META-INF/native/${relocation.native.prefix}_netty_tcnative_windows_x86_64.dll
                  </resource>
                  <file>
                    ${project.build.directory}/unpack/META-INF/native/netty_tcnative_windows_x86_64.dll
                  </file>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              <filters>
                <!-- Excluded all signatures from other jars -->
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/native-image/**/*.*</exclude>
                    <exclude>META-INF/proguard/**/*.*</exclude>
                    <exclude>META-INF/native/**/*.*</exclude>
                    <exclude>META-INF/dgminfo</exclude>
                    <exclude>META-INF/*.properties</exclude>
                    <exclude>**/LICENSE.txt</exclude>
                    <exclude>**/*.xsd</exclude>
                    <exclude>**/*-style.xml</exclude>
                    <exclude>**/license.header</exclude>
                    <exclude>**/library.properties</exclude>
                    <exclude>**/LICENSE</exclude>
                    <exclude>**/NOTICE</exclude>
                    <exclude>module-info.class</exclude>
                    <exclude>**/*.proto</exclude>
                    <exclude>android/**/*.*</exclude>
                    <exclude>javax/**/*.*</exclude>
                    <exclude>org/codehaus/mojo/**/*.*</exclude>
                    <exclude>org/checkerframework/**/*.*</exclude>
                    <exclude>io/opencensus/**/*.*</exclude>
                    <exclude>com/google/gson/**/*.*</exclude>
                    <exclude>com/google/api/**/*.*</exclude>
                    <exclude>com/google/cloud/**/*.*</exclude>
                    <exclude>com/google/errorprone/**/*.*</exclude>
                    <exclude>com/google/j2objc/**/*.*</exclude>
                    <exclude>com/google/logging/**/*.*</exclude>
                    <exclude>com/google/longrunning/**/*.*</exclude>
                    <exclude>com/google/rpc/**/*.*</exclude>
                    <exclude>com/google/type/**/*.*</exclude>
                    <exclude>com/google/thirdparty/**/*.*</exclude>
                    <exclude>com/google/common/xml/**/*.*</exclude>
                    <exclude>com/google/common/html/**/*.*</exclude>
                    <exclude>com/google/common/reflect/**/*.*</exclude>
                    <exclude>com/google/common/graph/**/*.*</exclude>
                    <exclude>groovy/grape/**/*.*</exclude>
                    <exclude>*.html</exclude>
                  </excludes>
                </filter>
              </filters>
              <relocations>
                <relocation>
                  <pattern>org.json</pattern>
                  <shadedPattern>${relocation.package}.org.json</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>okio</pattern>
                  <shadedPattern>${relocation.package}.okio</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>okhttp3</pattern>
                  <shadedPattern>${relocation.package}.okhttp3</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.grpc</pattern>
                  <shadedPattern>${relocation.package}.io.grpc</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.netty</pattern>
                  <shadedPattern>${relocation.package}.io.netty</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.objectweb.asm</pattern>
                  <shadedPattern>${relocation.package}.org.objectweb.asm</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google</pattern>
                  <shadedPattern>${relocation.package}.com.google</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.slf4j</pattern>
                  <shadedPattern>${relocation.package}.org.slf4j</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.apache</pattern>
                  <shadedPattern>${relocation.package}.org.apache</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.perfmark</pattern>
                  <shadedPattern>${relocation.package}.io.perfmark</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>bsh</pattern>
                  <shadedPattern>${relocation.package}.bsh</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <systemProperties>
                <property>
                  <name>deep.callback.class</name>
                  <value>com.intergral.deep.agent.tracepoint.handler.Callback</value>
                </property>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Ensure the jars and our code is the correct java version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <enforceBytecodeVersion>
                  <maxJdkVersion>${maven.compiler.target}</maxJdkVersion>
                  <ignoredScopes>
                    <ignoreScope>test</ignoreScope>
                  </ignoredScopes>
                  <excludes>
                    <!--This jar is only loaded if we are on java 9+-->
                    <exclude>com.intergral.deep:reflect-java-9</exclude>
                  </excludes>
                </enforceBytecodeVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>1.2</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>target/agent-${project.version}-lite.jar</file>
                  <type>jar</type>
                  <classifier>lite</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>